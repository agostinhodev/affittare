/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import Controller.SolicitacaoController;
import Model.Funcionario;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

/**
 *
 * @author Arthur
 */
public class SolicitacaoGUI extends javax.swing.JFrame {

    private final Funcionario funcionario;

    /**
     * Creates new form Solicitacao
     */
    public SolicitacaoGUI(Funcionario funcionario) {
        
        this.funcionario = funcionario;
        initComponents();
        this.getSolicitacoes();
        
    }

    private void getSolicitacoes(){
    
        SolicitacaoController solicitacao = new SolicitacaoController();
        JSONObject json = solicitacao.getSolicitacoes(this.funcionario.getId(), 0);
        try {
            
            if(json.has("status")){

                DefaultTableModel modelo = new DefaultTableModel();
               
                modelo.addColumn("ID:");
                modelo.addColumn("Valor:");
                modelo.addColumn("Data Interesse:");
                modelo.addColumn("Data Solicitação:");
                modelo.addColumn("Cliente:");
                modelo.addColumn("Local:");    
                modelo.addColumn("Endereço:"); 

                jTableSolicitacoes.setModel(modelo);
                
                if((boolean)json.get("status") && json.has("conteudo")){
                
                    JSONArray conteudo = json.getJSONArray("conteudo");
                    
                     for(int i = 0; i < conteudo.length(); i++){
                    
                        Object []obj= new Object[7];
                        
                        obj[0] = (int)conteudo.getJSONObject(i).get("id");                      
                        obj[1] = conteudo.getJSONObject(i).get("valor");
                        obj[2] = conteudo.getJSONObject(i).get("data_interesse");
                        obj[3] = conteudo.getJSONObject(i).get("data_solicitacao");
                        obj[4] = conteudo.getJSONObject(i).get("cliente");
                        obj[5] = conteudo.getJSONObject(i).get("nomeLocal");
                        obj[6] = conteudo.getJSONObject(i).get("endereco");
                        modelo.addRow(obj);
                        
                    }
                    
                } else {
                
                    JOptionPane.showMessageDialog(this, json.get("msg"));
                    
                }

            }
        
         } catch (JSONException ex) {
             
            Logger.getLogger(SolicitacaoGUI.class.getName()).log(Level.SEVERE, null, ex);
         
         }
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSolicitacoes = new javax.swing.JTable();
        jButtonAprovar = new javax.swing.JButton();
        jButtonReprovar = new javax.swing.JButton();
        jButtonVoltar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Affittare - Solicitações Pendentes");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(139, 0, 139));
        jPanel1.setPreferredSize(new java.awt.Dimension(950, 540));

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));

        jLabel2.setFont(new java.awt.Font("Viner Hand ITC", 0, 36)); // NOI18N
        jLabel2.setText("Solicitações de Reserva - Pendentes");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(192, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(154, 154, 154))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29))
        );

        jTableSolicitacoes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jTableSolicitacoes = new javax.swing.JTable(){

            public boolean isCellEditable(int row, int col){

                return false;

            }

        };
        jTableSolicitacoes.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(jTableSolicitacoes);

        jButtonAprovar.setBackground(new java.awt.Color(0, 204, 0));
        jButtonAprovar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonAprovar.setText("APROVAR");
        jButtonAprovar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAprovarActionPerformed(evt);
            }
        });

        jButtonReprovar.setBackground(new java.awt.Color(255, 0, 0));
        jButtonReprovar.setForeground(new java.awt.Color(255, 255, 255));
        jButtonReprovar.setText("REPROVAR");
        jButtonReprovar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonReprovarActionPerformed(evt);
            }
        });

        jButtonVoltar.setBackground(new java.awt.Color(255, 193, 7));
        jButtonVoltar.setForeground(new java.awt.Color(33, 37, 41));
        jButtonVoltar.setText("VOLTAR");
        jButtonVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonVoltarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 779, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(161, 161, 161)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 501, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButtonVoltar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jButtonAprovar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addGap(511, 511, 511))
                                        .addGroup(jPanel1Layout.createSequentialGroup()
                                            .addComponent(jButtonReprovar, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(0, 0, Short.MAX_VALUE)))))))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 51, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jButtonAprovar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButtonReprovar, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(238, 238, 238)))
                        .addGap(61, 61, 61)
                        .addComponent(jButtonVoltar))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 948, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonVoltarActionPerformed
        PrincipalGUI principal = new PrincipalGUI(funcionario);
        principal.setVisible(true);
        dispose();
    }//GEN-LAST:event_jButtonVoltarActionPerformed

    private void jButtonAprovarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAprovarActionPerformed
        
        int linha = this.jTableSolicitacoes.getSelectedRow();
        
        if(linha == -1){
            
            JOptionPane.showMessageDialog(this, "Selecione um registro na tabela");
            
        } else {
        
            int id    = (int) this.jTableSolicitacoes.getValueAt(linha, 0);
            
            SolicitacaoController solicitacao = new SolicitacaoController();            
            
            JSONObject json = solicitacao.aprovarReprovar(1, this.funcionario.getId(), id);
            
            try {
            
                if(json.has("status")){
                    
                    JOptionPane.showMessageDialog(this, json.get("msg"));

                    if((boolean)json.get("status")){
                        
                        this.getSolicitacoes();

                    }                
                    
                } else {

                    JOptionPane.showMessageDialog(this, "Não existe uma resposta da API");

                }
        
            } catch (JSONException ex) {
                Logger.getLogger(SolicitacaoGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }//GEN-LAST:event_jButtonAprovarActionPerformed

    private void jButtonReprovarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonReprovarActionPerformed
        // TODO add your handling code here:
        
        int linha = this.jTableSolicitacoes.getSelectedRow();
        
        if(linha == -1){
            
            JOptionPane.showMessageDialog(this, "Selecione um registro na tabela");
            
        } else {
        
            int id    = (int) this.jTableSolicitacoes.getValueAt(linha, 0);
            
            SolicitacaoController solicitacao = new SolicitacaoController();            
            
            JSONObject json = solicitacao.aprovarReprovar(2, this.funcionario.getId(), id);
            
            try {
            
                if(json.has("status")){
                    
                    JOptionPane.showMessageDialog(this, json.get("msg"));

                    if((boolean)json.get("status")){
                        
                        this.getSolicitacoes();
                    }                
                    
                } else {

                    JOptionPane.showMessageDialog(this, "Não existe uma resposta da API");

                }
        
            } catch (JSONException ex) {
                Logger.getLogger(SolicitacaoGUI.class.getName()).log(Level.SEVERE, null, ex);
            }
            
        }
        
    }//GEN-LAST:event_jButtonReprovarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAprovar;
    private javax.swing.JButton jButtonReprovar;
    private javax.swing.JButton jButtonVoltar;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSolicitacoes;
    // End of variables declaration//GEN-END:variables
}
